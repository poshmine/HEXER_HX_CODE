import numpy as np
import unittest
import HEXER as h
import HEXER_TEST_KEY as Tkey

class EquivalentTest(unittest.TestCase):
    '''
    Tests if you want to check direct equality of integers
    (To add or replicate copy paste base and change add 1 to test name)
    '''

    ##Correctional Factors

    #H_id
    def test_1(self):
        self.assertEqual(h.h_id, Tkey.h_id)

    #J_c
    def test_2(self):
        self.assertEqual(h.J_c, Tkey.J_c)

    #J_l
    def test_3(self):
        self.assertEqual(h.J_l, Tkey.J_l) 

    #J_b
    def test_4(self):
        self.assertEqual(h.J_b, Tkey.J_b)
    
    #J_s
    def test_5(self):
        self.assertEqual(h.J_s, Tkey.J_s)

    #J_r
    def test_6(self):
        self.assertEqual(h.J_r, Tkey.J_r)
    
    #H_s
    def test_7(self):
        self.assertEqual(h.h_s, Tkey.h_s)

    ##Misc Calculations

    #A_o_sb
    def test_8(self):
        self.assertEqual(h.A_o_sb, Tkey.A_o_sb)
    
    #A_o_tb
    def test_9(self):
        self.assertEqual(h.A_o_tb, Tkey.A_o_tb)

    #A_o_cr
    def test_10(self):
        self.assertEqual(h.A_o_cr, Tkey.A_o_cr)

    #A_o_w
    def test_11(self):
        self.assertEqual(h.A_o_w, Tkey.A_o_w)

    #A_o_bp
    def test_12(self):
        self.assertEqual(h.A_o_bp, Tkey.A_o_bp)

    #F_c
    def test_13(self):
        self.assertEqual(h.F_c, Tkey.F_c)
    
    #N_b
    def test_14(self):
        self.assertEqual(h.N_b, Tkey.N_b)
    #N_rc
    def test_15(self):
        self.assertEqual(h.N_rc, Tkey.N_rc)

if __name__ == '__main__':
    unittest.main()
